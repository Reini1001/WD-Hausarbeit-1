:root {
    --fontColor: hsl(0deg, 0%, 100%);
    --backgroundColor: hsl(155, 23%, 21%);
    --borderColor: hsl(0deg, 0%, 100%);

    --contentBoxColor: hsl(0, 4%, 32%);
    --tabGroupColor: hsl(0, 0%, 12%);
    --boxBorderColor: hsl(0, 0%, 0%);
    --propertyBoxColor: hsl(240, 1%, 20%);
    --transparentBackplate: #6B6B6BAA;



    /* --nav-- */
    --navBgColor: hsl(291, 10%, 14%);
    --navBorderColor: hsl(0deg, 0%, 100%);
    --navHoverColor: hsl(240, 11%, 27%);
    --navActivColor: hsl(120deg, 100%, 18.75%);

    /* --scrollbar-- */
    --scrollBgColor: hsl(240deg, 10%, 15%);
    --scrollThumbColor: hsl(240deg, 10%, 35%);
    --scrollHoverColor: hsl(0deg, 0%, 100%);


    --buttonNormalColor: #236700;
    --buttonHoverColor: #17a10d;
    --buttonClickColor: #00540b;
    --buttonActiveColor: #128c8c;

    --tabGroupButtonNormalColor: hsl(0, 0%, 29%);
    --tabGroupButtonHoverColor: hsl(0, 0%, 39%);
    --tabGroupButtonClickColor: hsl(0, 0%, 14%);

    --iButtonNormalColor: #2222EE;
    --iButtonHoverColor: #4545ee;
    --iButtonClickColor: #1717ab;

    --closeButtonNormalColor: #d50707;
    --closeButtonHoverColor: #fd2727;
    --closeButtonClickColor: #c50000;

    --codeStringColor: #ff4141;
    --codeDynamicColor: #49eeee;

}

/* General Formatting */
* {
    font-family: JetBrainsMono, monospace;
    padding: 0;
    margin: 0;
}

body {
    display: flex;
    flex-direction: column;
    background-color: var(--backgroundColor);
    color: var(--fontColor);
}

main {
    width: 100%;
    display: flex;
    flex-direction: column;
    margin-bottom: 2rem;
}

main > * {
    margin: 1vw;
}

h1, h2 {
    margin-bottom: 1em;
}

article {
    grid-template-rows: min-content min-content;
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "example code"
                         "properties description";
    grid-gap: 1vw;
}

.content-box {
    background-color: var(--contentBoxColor);
    padding: 1vw;
    border: 0.2vw solid black;
    border-radius: 1vw;
}

#property-tab-group {
    background-color: var(--tabGroupColor);
    padding: 1vw;
    border: 0.2vw solid var(--boxBorderColor);
    border-radius: 1vw;
}

.example {
    grid-area: example;
    display:flex;
    align-content: center;
}
.example svg {
    display: block;
    margin: auto;
    max-height: 20vh;
}

.code {
    grid-area: code;
}

.properties {
    grid-area: properties;
}

.description {
    grid-area: description;
}

footer {
    position: fixed;
    left: 0;
    bottom: 0;
    padding: 0.5rem;
    width: 100%;
    text-align: center;
}

/* Button Formatting */
input[type="radio"] {
    display: none;
}

#property-tab-group {
    gap: 8px;
}
#property-tab-group label {
    flex-grow: 1;
    background-color: var(--tabGroupButtonNormalColor);
    border: 0.2vw solid var(--boxBorderColor);
    height: 2em;
    display: flex;
    justify-content: center;
    align-content: center;
}
#property-tab-group label:hover {
    background-color: var(--tabGroupButtonHoverColor);
}
#property-tab-group label:active {
    background-color: var(--tabGroupButtonClickColor);
}

.show-code {
    grid-area: show-code;
    display: flex;
    align-items: center;
}

.selector-group {
    background-color: var(--propertyBoxColor);
    border: 0.2vw solid var(--boxBorderColor);
    margin: 1vw;
    padding: 1vw;
    display: flex;
    flex-wrap: wrap;
}
.selector-group > div {
    display: flex;
    flex-wrap: wrap;
}

.selector-label {
    flex-basis: 10%;
    flex-grow: 1;
    min-width: 5em;
    align-content: center;
}

.selector-i {
    flex-basis: 10%;
    flex-grow: 1;
    display:flex;
    justify-content: center;
    align-content: center;
}
.selector-i label {
    display: flex;
    background-color: var(--iButtonNormalColor);
    border-radius: 100%;
    border: 0.2vw solid var(--boxBorderColor);
    width: 2em;
    height: 2em;
    justify-content: center;
    align-content: center;
}
.selector-i label:hover {
    background-color: var(--iButtonHoverColor);
}
.selector-i label:active {
    background-color: var(--iButtonClickColor);
}

.selector-buttons {
    flex-basis: 50%;
    flex-grow: 4;
    display:flex;
    gap: 3px;
    justify-content: center;
}
.selector-buttons label {
    display: flex;
    background-color: var(--buttonNormalColor);
    border: 0.2vw solid var(--boxBorderColor);
    align-content: center;
    justify-content: center;
    width: 6em;
    height: 2em;
}
.selector-buttons label:hover {
    background-color: var(--buttonHoverColor);
}
.selector-buttons label:active {
    background-color: var(--buttonClickColor);
}

.button {
    height: 100%;
    display: flex;
    align-items: center;
    text-align: center;
}


/* Code Formatting */
code span {
    white-space: nowrap;
}
.code-layer {
    margin-left: 2em;
    display: flex;
    flex-direction: column;
}
.code-string {
    color: var(--codeStringColor);
}

.code-dynamic-text {
    color: var(--codeDynamicColor);
}


/* Display Property Tabs */
article {
    display: none;
}
#property-tab-paint:checked ~ #paint,
#property-tab-basic:checked ~ #basic,
#property-tab-linecaps:checked ~ #linecaps,
#property-tab-dash:checked ~ #dash
{
    display: grid;
}


/* Display Code */
.code-dynamic-text {
    display:none;
}
#paint-fill-white:checked ~ * #paint-code-fill-white-text,
#paint-fill-black:checked ~ * #paint-code-fill-black-text,
#paint-fill-green:checked ~ * #paint-code-fill-green-text,
#paint-fill-blue:checked ~ * #paint-code-fill-blue-text,

#paint-stroke-white:checked ~ * #paint-code-stroke-white-text,
#paint-stroke-black:checked ~ * #paint-code-stroke-black-text,
#paint-stroke-green:checked ~ * #paint-code-stroke-green-text,
#paint-stroke-blue:checked ~ * #paint-code-stroke-blue-text
{
    display: inline;
}


/* Display Descriptions */
.description p {
    display: none;
}
#paint-description-fill:checked ~ * #paint-description-fill-text,
#paint-description-stroke:checked ~ * #paint-description-stroke-text
{
    display: block;
}


/* Paint */
#paint .shape {
    transition: all 0.6s ease;
    fill: white;
    stroke: white;
}

#paint-fill-black:checked ~ .example .shape {
    fill: black;
}
#paint-fill-green:checked ~ .example .shape {
    fill: #289819;
}
#paint-fill-blue:checked ~ .example .shape {
    fill: #3faef8;
}

#paint-stroke-black:checked ~ .example .shape {
    stroke: black;
}
#paint-stroke-green:checked ~ .example .shape {
    stroke: #289819;
}
#paint-stroke-blue:checked ~ .example .shape {
    stroke: #3faef8;
}


/* Basic */
/*todo*/

/* Linecaps */
/*todo*/

/* Dash */
/*todo*/


/* Button Active State */
#property-tab-paint:checked ~ * label[for="property-tab-paint"],
#property-tab-basic:checked ~ * label[for="property-tab-basic"],
#property-tab-linecaps:checked ~ * label[for="property-tab-linecaps"],
#property-tab-dash:checked ~ * label[for="property-tab-dash"],

#paint-fill-white:checked ~ * label[for="paint-fill-white"],
#paint-fill-black:checked ~ * label[for="paint-fill-black"],
#paint-fill-green:checked ~ * label[for="paint-fill-green"],
#paint-fill-blue:checked ~ * label[for="paint-fill-blue"],

#paint-stroke-white:checked ~ * label[for="paint-stroke-white"],
#paint-stroke-black:checked ~ * label[for="paint-stroke-black"],
#paint-stroke-green:checked ~ * label[for="paint-stroke-green"],
#paint-stroke-blue:checked ~ * label[for="paint-stroke-blue"],

#paint-description-fill:checked ~ * label[for="paint-description-fill"],
#paint-description-stroke:checked ~ * label[for="paint-description-stroke"]
{
    background-color: var(--buttonActiveColor);
}


/* Animations */
@keyframes popup {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

/* Small Screen Only */
@media screen and (max-width: 769px) {

    footer {
        background-color: var(--backgroundColor);
    }

    .description,
    #code-show:checked ~ * .code
    {
        display: grid;
        animation: popup 0.1s cubic-bezier(0.71, 0.99, 1, 0.4);
    }
    .code,
    #paint-description-none:checked ~ .description
    {
        display: none;
    }

    article {
        grid-template-areas: "example show-code"
                             "properties properties";
        grid-template-columns: auto min-content;
    }

    .description,
    .code
    {
        z-index: 4;
        position: fixed;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        grid-template-rows: minmax(5vw,max-content) min-content auto minmax(5vw,max-content);
        grid-template-columns: minmax(5vw,max-content) auto 4em minmax(5vw,max-content);
        grid-template-areas: ". . . ."
                             ". title close ."
                             ". window window ."
                             ". . . .";
        background-color: var(--transparentBackplate);
        border: none;
        border-radius: 0;
    }

    .description > *,
    .code > *
    {
        background-color: var(--contentBoxColor);
        border: 1px solid var(--boxBorderColor);
    }


    .close-inner {
        grid-area: close;
        background-color: var(--closeButtonNormalColor);
        font-size: 23px;
        font-family: monospace;
        padding: 10px;
        text-align: center;
    }
    .close-inner:hover {
        background-color: var(--closeButtonHoverColor);
    }
    .close-inner:active {
        background-color: var(--closeButtonClickColor);
    }


    .close-outer {
        grid-row: 1/5;
        grid-column: 1/5;
        z-index: -4;
        background-color: transparent;
        border: none;
    }
    .code-frame,
    .description-frame {
        grid-area: window;
        overflow-y: scroll;
        padding: 1em 1em 4em 1em;
    }

    .code > h2,
    .description > h2 {
        width: 100%;
        grid-area: title;
        text-align: center;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }
}

/* Large Screen Only */
@media screen and (min-width: 769px) {
    .compact-element {
        display: none;
    }
}